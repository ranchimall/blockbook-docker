version: '3.8'

services:
  blockbook-testnet-backend:
    image: ${BACKEND_IMAGE}
    container_name: ${BACKEND_CONTAINER_NAME}
    networks:
      - blockbook-testnet
    volumes:
      - blockbook-testnet:/opt
      - ${BACKEND_BOOTSTRAP_FILE:-/dev/null}:/local-bootstrap/bootstrap-blockbook-flo-testnet-backend.tar.gz  # Use /dev/null if no file
    ports:
      - "${BACKEND_PORT_1}:48366"
      - "${BACKEND_PORT_2}:18066"
    command: backend
    environment:
      - BOOTSTRAP_FILE=/local-bootstrap/bootstrap-blockbook-flo-testnet-backend.tar.gz  # Set to empty string if not provided
      - BOOTSTRAP_URL=${BACKEND_BOOTSTRAP_URL:-}  # Set to empty string if not provided

  blockbook-testnet-frontend:
    image: ${FRONTEND_IMAGE}
    container_name: ${FRONTEND_CONTAINER_NAME}
    networks:
      - blockbook-testnet
    volumes:
      - blockbook-testnet:/opt
      - ${FRONTEND_BOOTSTRAP_FILE:-/dev/null}:/local-bootstrap/bootstrap-blockbook-flo-testnet-frontend.tar.gz  # Use /dev/null if no file
    ports:
      - "${FRONTEND_PORT_1}:19166"
      - "${FRONTEND_PORT_2}:19066"
    depends_on:
      - blockbook-testnet-backend
    entrypoint: /bin/sh -c
    command: >
      "/opt/entrypoint.sh frontend $(getent hosts blockbook-testnet-backend | awk '{ print $1 }')"
    environment:
      - BOOTSTRAP_FILE=/local-bootstrap/bootstrap-blockbook-flo-testnet-frontend.tar.gz  # Set to empty string if not provided
      - BOOTSTRAP_URL=${FRONTEND_BOOTSTRAP_URL:-}  # Set to empty string if not provided

volumes:
  blockbook-testnet:

networks:
  blockbook-testnet:
    driver: bridge
